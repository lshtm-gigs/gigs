% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gigs_options.R
\name{.gigs_options}
\alias{.gigs_options}
\title{Package-level gigs options}
\description{
An environment containing six named character vectors. These
define how gigs handles inputs with missing, undefined, or invalid
elements:
\itemize{
\item \code{"handle_missing_data"} - How should gigs handle missing (\code{NA}) elements?
\item \code{"handle_undefined_data"} - How should gigs handle undefined (\code{NaN},
\code{Inf}, \code{-Inf}) elements?
\item \code{"handle_oob_xvar"} - How should gigs handle elements of \code{x}
variables which are out of bounds for the standard in use?
\item \code{"handle_invalid_sex"} - How should gigs handle elements of \code{sex} which
are not one of \code{"M"} or \code{"F"}?
\item \code{"handle_invalid_acronym"} - In conversion functions, how should gigs
handle \code{acronym} elements which do not map onto any implemented growth
standard?
\item \code{"handle_oob_centiles"} - In \code{centile2value} functions, how should
gigs handle elements of \code{p} that are not between \code{0} and \code{1}?
}

By default, each of these options will be set to \code{"warn"}, so you will be
informed of any invalid data you use as inputs. You can use
\code{gigs_options_set()} to change this behaviour.
}
\examples{
# Get the names of all available options
names(.gigs_options)
}
\seealso{
The \code{gigs_option_get()} and \code{gigs_option_set()} functions, which can
be used to edit the values in \code{.gigs_options}.
}
